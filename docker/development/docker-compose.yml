services:
  postgres:
    container_name: simple_bank_dev_db
    image: postgres:12-alpine
    env_file:
      -  ./.env
    environment:
      - POSTGRES_USER=${DEV_DB_USER}
      - POSTGRES_PASSWORD=${DEV_DB_PASSWORD}
      - POSTGRES_DB=${DEV_DB_NAME}
    ports:
      - "${DEV_DB_HOST_PORT}:${DEV_DB_CONTAINER_PORT}" # Host: 6433, Docker Container: 5433
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DEV_DB_USER} -p ${DEV_DB_CONTAINER_PORT}"]
      interval: 5s
      timeout: 5s
      retries: ${DEV_DB_MAX_RETRIES}
    command: -p ${DEV_DB_CONTAINER_PORT}  # Set PostgreSQL port

  api:
    container_name: simple_bank_dev_api
    build:
      context: ../..
      dockerfile: docker/development/Dockerfile
    env_file:
      -  ./.env
    ports:
      - "${DEV_API_HOST_PORT}:${DEV_API_CONTAINER_PORT}" # http://localhost:8081
    volumes:
      - ../..:/app
    environment:
      - DB_SOURCE=${DEV_DB_SOURCE}
      - DB_MAX_CONNS=${DEV_DB_MAX_CONNS}
      - DB_MIN_CONNS=${DEV_DB_MIN_CONNS}
      - DB_CONN_LIFETIME=${DEV_DB_CONN_LIFETIME}
      - DB_CONN_IDLE_TIME=${DEV_DB_CONN_IDLE_TIME}
      - DB_MAX_RETRIES=${DEV_DB_MAX_RETRIES}
      - GIN_MODE=debug
      - PORT=${DEV_API_CONTAINER_PORT}
    depends_on:
      postgres:
        condition: service_healthy
    command: air

volumes:
  postgres-dev-data:
    name: simple_bank_dev_data