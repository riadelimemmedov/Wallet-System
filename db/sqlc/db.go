// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"

	"github.com/jackc/pgconn"
	"github.com/jackc/pgx/v4"
	"github.com/jackc/pgx/v4/pgxpool"
	"fmt"
)

const (
	DbDriver = "postgres"
	DbSource = "postgresql://postgres:123321@localhost:6432/simple_bank?sslmode=disable"
)

func NewDBPool() (*pgxpool.Pool, error) {
	pool, err := pgxpool.Connect(context.Background(), DbSource)
	if err != nil {
		return nil, fmt.Errorf("failed to connect to database: %v", err)
	}
	return pool, nil
}

type DBTX interface {
	Exec(context.Context, string, ...interface{}) (pgconn.CommandTag, error)
	Query(context.Context, string, ...interface{}) (pgx.Rows, error)
	QueryRow(context.Context, string, ...interface{}) pgx.Row
}

func New(db DBTX) *Queries {
	return &Queries{db: db}
}

type Queries struct {
	db DBTX
}

func (q *Queries) WithTx(tx pgx.Tx) *Queries {
	return &Queries{
		db: tx,
	}
}
