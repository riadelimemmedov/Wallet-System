// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgtype"
)

type UploadStatus string

const (
	UploadStatusPENDING    UploadStatus = "PENDING"
	UploadStatusPROCESSING UploadStatus = "PROCESSING"
	UploadStatusCOMPLETED  UploadStatus = "COMPLETED"
	UploadStatusFAILED     UploadStatus = "FAILED"
	UploadStatusCANCELLED  UploadStatus = "CANCELLED"
)

func (e *UploadStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UploadStatus(s)
	case string:
		*e = UploadStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for UploadStatus: %T", src)
	}
	return nil
}

type NullUploadStatus struct {
	UploadStatus UploadStatus `json:"upload_status"`
	Valid        bool         `json:"valid"` // Valid is true if UploadStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUploadStatus) Scan(value interface{}) error {
	if value == nil {
		ns.UploadStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UploadStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUploadStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UploadStatus), nil
}

type Account struct {
	AccountID      int32          `json:"account_id"`
	UserID         int32          `json:"user_id"`
	AccountNumber  string         `json:"account_number"`
	AccountType    string         `json:"account_type"`
	Balance        pgtype.Numeric `json:"balance"`
	CurrencyCode   string         `json:"currency_code"`
	InterestRate   pgtype.Numeric `json:"interest_rate"`
	OverdraftLimit pgtype.Numeric `json:"overdraft_limit"`
	IsActive       bool           `json:"is_active"`
	CreatedAt      time.Time      `json:"created_at"`
	UpdatedAt      time.Time      `json:"updated_at"`
}

type AccountCurrency struct {
	CurrencyCode  string         `json:"currency_code"`
	CurrencyName  string         `json:"currency_name"`
	Symbol        sql.NullString `json:"symbol"`
	IsActive      bool           `json:"is_active"`
	ExchangeRate  pgtype.Numeric `json:"exchange_rate"`
	LastUpdatedAt sql.NullTime   `json:"last_updated_at"`
	CreatedAt     time.Time      `json:"created_at"`
	UpdatedAt     time.Time      `json:"updated_at"`
}

type AccountType struct {
	AccountType string    `json:"account_type"`
	Description string    `json:"description"`
	IsActive    bool      `json:"is_active"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type AuditTrail struct {
	AuditID   int32          `json:"audit_id"`
	TableName string         `json:"table_name"`
	RecordID  int32          `json:"record_id"`
	Action    string         `json:"action"`
	OldValues pgtype.JSONB   `json:"old_values"`
	NewValues pgtype.JSONB   `json:"new_values"`
	UserID    sql.NullInt32  `json:"user_id"`
	IpAddress sql.NullString `json:"ip_address"`
	CreatedAt time.Time      `json:"created_at"`
}

type Entry struct {
	ID        int64          `json:"id"`
	AccountID sql.NullInt32  `json:"account_id"`
	Amount    pgtype.Numeric `json:"amount"`
	CreatedAt time.Time      `json:"created_at"`
}

type FileMetadatum struct {
	ID             int32         `json:"id"`
	UploadJobsID   string        `json:"upload_jobs_id"`
	S3Url          string        `json:"s3_url"`
	Checksum       string        `json:"checksum"`
	MimeType       string        `json:"mime_type"`
	Width          sql.NullInt32 `json:"width"`
	Height         sql.NullInt32 `json:"height"`
	AdditionalData pgtype.JSONB  `json:"additional_data"`
	CreatedAt      time.Time     `json:"created_at"`
	UpdatedAt      time.Time     `json:"updated_at"`
}

type Transaction struct {
	TransactionID     int32          `json:"transaction_id"`
	FromAccountID     sql.NullInt32  `json:"from_account_id"`
	ToAccountID       sql.NullInt32  `json:"to_account_id"`
	TypeCode          string         `json:"type_code"`
	Amount            pgtype.Numeric `json:"amount"`
	CurrencyCode      string         `json:"currency_code"`
	ExchangeRate      pgtype.Numeric `json:"exchange_rate"`
	StatusCode        string         `json:"status_code"`
	IsCompleted       bool           `json:"is_completed"`
	Description       sql.NullString `json:"description"`
	ReferenceNumber   sql.NullString `json:"reference_number"`
	TransactionDate   time.Time      `json:"transaction_date"`
	CreatedAt         time.Time      `json:"created_at"`
	UpdatedAt         time.Time      `json:"updated_at"`
	TransactionNumber uuid.UUID      `json:"transaction_number"`
}

type TransactionStatus struct {
	StatusCode  string    `json:"status_code"`
	Description string    `json:"description"`
	IsActive    bool      `json:"is_active"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type TransactionType struct {
	TypeCode    string    `json:"type_code"`
	Description string    `json:"description"`
	IsActive    bool      `json:"is_active"`
	CreatedAt   time.Time `json:"created_at"`
	UpdatedAt   time.Time `json:"updated_at"`
}

type UploadJob struct {
	ID           string         `json:"id"`
	FileName     string         `json:"file_name"`
	FileSize     int64          `json:"file_size"`
	ContentType  string         `json:"content_type"`
	TempPath     string         `json:"temp_path"`
	TargetPath   string         `json:"target_path"`
	UserID       int32          `json:"user_id"`
	Status       UploadStatus   `json:"status"`
	ErrorMessage sql.NullString `json:"error_message"`
	CreatedAt    time.Time      `json:"created_at"`
	UpdatedAt    time.Time      `json:"updated_at"`
	CompletedAt  sql.NullTime   `json:"completed_at"`
}

type User struct {
	UserID          int32          `json:"user_id"`
	Username        string         `json:"username"`
	PasswordHash    string         `json:"password_hash"`
	Email           sql.NullString `json:"email"`
	FirstName       sql.NullString `json:"first_name"`
	LastName        sql.NullString `json:"last_name"`
	PhoneNumber     sql.NullString `json:"phone_number"`
	ProfileImageUrl sql.NullString `json:"profile_image_url"`
	IsActive        bool           `json:"is_active"`
	LastLogin       time.Time      `json:"last_login"`
	CreatedAt       time.Time      `json:"created_at"`
	UpdatedAt       time.Time      `json:"updated_at"`
}
