# .github/workflows/go-test.yml
name: Go Test Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  run-tests:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-latest

    services:
      test-db:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
        ports:
          - 6432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.5"

      - name: Install database migration tool
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate

      - name: Run database migrations
        run: |
          migrate -path db/migration -database \
          "postgresql://${{ secrets.TEST_DB_USER }}:${{ secrets.TEST_DB_PASSWORD }}@${{ secrets.TEST_DB_HOST }}:${{ secrets.TEST_DB_PORT }}/${{ secrets.TEST_DB_NAME }}?sslmode=${{ secrets.TEST_DB_SSLMODE }}" \
          -verbose up

      - name: Clean test cache
        run: make clean-test-cache

      - name: Run tests
        env:
          TEST_DB_HOST: ${{ secrets.TEST_DB_HOST }}
          TEST_DB_PORT: ${{ secrets.TEST_DB_PORT }}
          TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
          TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          TEST_DB_NAME: ${{ secrets.TEST_DB_NAME }}
          TEST_DB_SSLMODE: ${{ secrets.TEST_DB_SSLMODE }}
        run: make test
